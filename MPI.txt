MPI для архитектуры с распределенной памятью.
Передачей сообщений занимается операционная система
Для чего нужен MPI – Стандартизация (работает независимо от того, на чем запускают)
SPMD – предполагает, каждый процесс параллельного приложения имеет один и тот же исходный код. один исполняемый файл, множество процессов
MPMD – предполагает, каждый процессы параллельного приложения имеют различные исходные коды
MPI использует и SPMD и MPDM.
Каким образом организуют задачу из множества подзадач - через загрузчик, в каком файле, какое количество процессов, через коммуникатор.
Что включено в коммуникатор - id (какие процессы будут включены), process id (ip адрес узла), где он находится.

Для передачи сообщений - что отправлять (чтобы передать сообщение передается адрес (задается типом данных) буфера, где лежит сообщение и длина сообщения), 
			кому отправлять 
В mpi для отправки сообщения задается нетепизированный указатель, затем тип mpi, количество элементов сообщения.
Есть свои теги, целое число, которое задает программист, пользовательская идентификация, программа разбирает если нужно

Масштаб расспараллеливания mpi берет из файла на каком узле какое количество ппроцессов использовать, либо задавать через консоль

Откуда программа знает, когда программа завершилась - доп функции проверяют завершение или ожидание 

Когда разблокировать процесс при завершении системного вызова - 19 слайд лекции

mpi не следит за контролем адресов, параметр send и recive контролирует программист


