reduction - в момент join выполняется reduction, которое возвращает частные данные указанной агрегации.
Редукция подразумевает определение для каждой нити частной переменной для вычисления "частичного" результата 
и автоматическое выполнение операции "слияния" частичных результатов

Синхронизации на 20 слайде
critical работает на блоке взаимоисключения, atomic только на одну следующую операцию

Таким образом, если необходимо только обновлять общую переменную в критических участках кода, 
то предпочтительнее использовать критическую секцию. 
Если же необходимо вычислять агрегированную информацию из массива данных, 
то более эффективным будет использование reduction.

Общие переменные, доступные из нескольких потоков. Например, если несколько потоков должны 
инкрементировать одну и ту же переменную, то для избежания гонки данных следует использовать критическую секцию.

Общие объекты, такие как структуры данных, которые могут быть изменены из нескольких потоков. 
Например, если несколько потоков пытаются добавить элементы в один и тот же список, то следует 
использовать критическую секцию для обеспечения корректности выполнения программы.

Файлы, которые могут быть изменены из нескольких потоков. Например, если несколько потоков 
пытаются записать данные в один и тот же файл, то следует использовать критическую секцию для 
предотвращения ошибок записи или потери данных.




